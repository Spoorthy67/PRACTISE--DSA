class Solution {
    public void reorderList(ListNode head) {
        if(head==null||head.next==null){
            return;
        }
        ListNode mid=middleNode(head);
        ListNode headSecond=reverseList(mid);
        ListNode headFirst=head;
        while(headFirst!=null&&headSecond!=null){
            ListNode temp=headFirst.next;
            headFirst.next=headSecond;
            headFirst=temp;

            temp=headSecond.next;
            headSecond.next=headFirst;
            headSecond=temp;

        }

        if(headFirst!=null){
            headFirst.next=null;
        }

        
    }
    public ListNode middleNode(ListNode head){
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null&&fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
    public ListNode reverseList(ListNode head){
        ListNode prev=null;
        ListNode current=head;
        ListNode next;
        while(current!=null){
            next=current.next;
            
            current.next=prev;
            prev=current;
            current=next;
        }
        return prev;
    }
}
